name: Node.js CI

on: [push]

jobs:
    matrix:
        strategy:
          matrix:
            os: [ubuntu-latest, windows-latest, macos-latest]

        runs-on: ${{ matrix.os }}
        steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Set up Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '22'

        - name: Install dependencies
          run: |
            npm i -g @vercel/ncc
            npm install

        - name: Build project
          run: |
            node --experimental-sea-config exe.json
            ncc build src/index.ts -o dist

        - name: Build exe windows
          if: matrix.os == 'windows-latest'
          run: |
            node -e "require('fs').copyFileSync(process.execPath, 'html_to_md.exe')"
            npx postject html_to_md.exe NODE_SEA_BLOB sea-prep.blob --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2

        - name: Build exe linux
          if: matrix.os == 'ubuntu-latest'
          run: |
            cp $(command -v node) html_to_md
            npx postject html_to_md NODE_SEA_BLOB sea-prep.blob --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2

        - name: Build exe Mac
          if: matrix.os == 'macos-latest'
          run: |
            cp $(command -v node) html_to_md
            npx postject html_to_md NODE_SEA_BLOB sea-prep.blob --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2 --macho-segment-name NODE_SEA

        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: html_to_md-${{ matrix.os }}
            path: html_to_md*